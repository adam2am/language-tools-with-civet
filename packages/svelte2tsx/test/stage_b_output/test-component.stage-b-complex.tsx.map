{
  "version": 3,
  "sources": [
    "test-stage-b-complex-component.svelte"
  ],
  "names": [],
  "mappings": "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",
  "file": "test-stage-b-complex-component.svelte",
  "sourcesContent": [
    "\n<script context=\"module\" lang=\"civet\">\n  // Module script with complex Civet\n  export moduleVar := \"Hello from Complex Module Civet!\"\n  console.log moduleVar\n\n  // Multi-line arrow function\n  export complexAdd := (a, b) ->\n    c := a + b\n    // Civet comment\n    d := c * 2\n    return d\n\n  export const calculated = complexAdd(5, 3) // calculated should be 16\n\n  // Object and array destructuring\n  { anObject: { nestedKey }, anArray: [first, ,third] } := { anObject: { nestedKey: \"ModuleValue\" }, anArray: [10, 20, 30] }\n  console.log nestedKey, first, third // \"ModuleValue\", 10, 30\n</script>\n\n<script lang=\"civet\">\n  // Instance script with complex Civet\n  instanceVar := \"Hello from Complex Instance Civet!\"\n  console.log instanceVar\n\n  // Conditional logic\n  x := 10\n  message := if x > 5\n    \"Greater than 5\"\n  else\n    \"Not greater than 5\"\n  console.log message\n\n  // Loop\n  doubled := []\n  for i of [1..3]\n    doubled.push i * 2\n  console.log doubled // [2, 4, 6]\n\n  // Another destructuring example\n  { propA, propB = \"defaultB\" } .= { propA: \"ValueA\" }\n  console.log propA, propB\n</script>\n\n<h1>Complex Test Component</h1>\n<p>{instanceVar}</p>\n<p>{moduleVar}</p>\n<p>{calculated}</p>\n<p>Nested: {nestedKey}, First: {first}, Third: {third}</p>\n<p>Message: {message}</p>\n<p>Doubled: {doubled.join(', ')}</p>\n<p>Props: {propA}, {propB}</p>\n"
  ]
}